#apiVersion: helm.toolkit.fluxcd.io/v2
#kind: HelmRelease
#metadata:
#  name: loki
#spec:
#  interval: 5m
#  dependsOn:
#    - name: prometheus
#  chart:
#    spec:
#      version: "6.x"
#      chart: loki
#      sourceRef:
#        kind: HelmRepository
#        name: grafana
#  values:
#    
#    chunksCache:
#      enabled: false
#    resultsCache:
#      enabled: false
#    test:
#      enabled: false
#    # following https://github.com/fluxcd/flux2-monitoring-example/pull/23/files#diff-5e041afacf25eb055565b4a1c32d5b81201ddce29c84adf13a6ae88463e0832b
#    extraObjects:
#      - apiVersion: v1
#        kind: ConfigMap
#        metadata:
#          name: loki-datasource
#          labels:
#            app: loki
#            chart: loki
#            release: loki
#            grafana_datasource: "1"
#            app.kubernetes.io/part-of: prometheus
#        data:
#          loki-datasource.yaml: |-
#            apiVersion: 1
#            datasources:
#            - name: Loki
#              type: loki
#              access: proxy
#              url: http://loki:{{ .Values.loki.server.http_listen_port }}
#              version: 1
#              isDefault: false
#    loki:
#      auth_enabled: false
#      serviceMonitor:
#        enabled: true
#        labels:
#          app.kubernetes.io/part-of: prometheus
#      limits_config:
#        allow_structured_metadata: true
#        retention_period: 24h
#        volume_enabled: true
#      # https://grafana.com/docs/loki/latest/setup/install/helm/install-monolithic/
#      commonConfig:
#        replication_factor: 1
#      schemaConfig:
#        configs:
#          - from: "2024-04-01"
#            store: tsdb
#            object_store: s3
#            schema: v13
#            index:
#              prefix: loki_index_
#              period: 24h
#      pattern_ingester:
#        enabled: true
#      ruler:
#        enable_api: true
#    minio:
#      enabled: true
#    lokiCanary:
#      enabled: false
#    deploymentMode: SingleBinary
#    singleBinary:
#      replicas: 1
#    # Zero out replica counts of other deployment modes
#    backend:
#      replicas: 0
#    read:
#      replicas: 0
#    write:
#      replicas: 0
#    ingester:
#      replicas: 0
#    querier:
#      replicas: 0
#    queryFrontend:
#      replicas: 0
#    queryScheduler:
#      replicas: 0
#    distributor:
#      replicas: 0
#    compactor:
#      replicas: 0
#    indexGateway:
#      replicas: 0
#    bloomCompactor:
#      replicas: 0
#    bloomGateway:
#      replicas: 0


#apiVersion: helm.toolkit.fluxcd.io/v2
#kind: HelmRelease
#metadata:
#  name: loki
#  namespace: observability
#spec:
#  interval: 5m
#  dependsOn:
#    - name: prometheus
#  chart:
#    spec:
#      version: "6.x"
#      chart: loki
#      sourceRef:
#        kind: HelmRepository
#        name: grafana
#  values:
#    chunksCache:
#      enabled: false
#    resultsCache:
#      enabled: false
#    test:
#      enabled: false
#    extraObjects:
#      - apiVersion: v1
#        kind: ConfigMap
#        metadata:
#          name: loki-datasource
#          labels:
#            app: loki
#            chart: loki
#            release: loki
#            grafana_datasource: "1"
#            app.kubernetes.io/part-of: prometheus
#        data:
#          loki-datasource.yaml: |-
#            apiVersion: 1
#            datasources:
#            - name: Loki
#              type: loki
#              access: proxy
#              url: http://loki:{{ .Values.loki.server.http_listen_port }}
#              version: 1
#              isDefault: false
#    loki:
#      auth_enabled: false
#      serviceMonitor:
#        enabled: true
#        labels:
#          app.kubernetes.io/part-of: prometheus
#      limits_config:
#        allow_structured_metadata: true
#        retention_period: 24h
#        volume_enabled: true
#      commonConfig:
#        replication_factor: 1
#      schemaConfig:
#        configs:
#          - from: "2024-04-01"
#            store: tsdb
#            object_store: s3
#            schema: v13
#            index:
#              prefix: loki_index_
#              period: 24h
#      pattern_ingester:
#        enabled: true
#      ruler:
#        enable_api: true
#    minio:
#      enabled: true
#      persistence:
#        enabled: true
#        storageClass: efs-sc
#        size: 20Gi
#        accessModes:
#          - ReadWriteMany
#    lokiCanary:
#      enabled: false
#    deploymentMode: SingleBinary
#    singleBinary:
#      replicas: 1
#      persistence:
#        enabled: true
#        storageClass: efs-sc          # <<< Nome da sua StorageClass (EFS)
#        size: 20Gi                    # <<< Tamanho do volume
#    backend:
#      replicas: 0
#    read:
#      replicas: 0
#    write:
#      replicas: 0
#    ingester:
#      replicas: 0
#    querier:
#      replicas: 0
#    queryFrontend:
#      replicas: 0
#    queryScheduler:
#      replicas: 0
#    distributor:
#      replicas: 0
#    compactor:
#      replicas: 0
#    indexGateway:
#      replicas: 0
#    bloomCompactor:
#      replicas: 0
#    bloomGateway:
#      replicas: 0
#


apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: observability
spec:
  interval: 5m
  dependsOn:
    - name: prometheus
  chart:
    spec:
      version: "6.x"
      chart: loki
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    #chunksCache:
    #  enabled: false
    resultsCache:
      enabled: true
    test:
      enabled: false
    extraObjects:
      - apiVersion: v1
        kind: ConfigMap
        metadata:
          name: loki-datasource
          labels:
            app: loki
            chart: loki
            release: loki
            grafana_datasource: "1"
            app.kubernetes.io/part-of: prometheus
        data:
          loki-datasource.yaml: |-
            apiVersion: 1
            datasources:
            - name: Loki
              type: loki
              access: proxy
              url: http://loki:{{ .Values.loki.server.http_listen_port }}
              version: 1
              isDefault: false
    loki:
      memberlist:
        join_members: []
      auth_enabled: false
      serviceMonitor:
        enabled: true
        labels:
          app.kubernetes.io/part-of: prometheus
      limits_config:
        allow_structured_metadata: true
        retention_period: 24h
        volume_enabled: true
      commonConfig:
        replication_factor: 1
<<<<<<< HEAD
      storage:
        type: 'filesystem'
        bucketNames:
          chunks: chunks
          ruler: ruler
          admin: admin
=======
      storage:
        type: 'filesystem'
        bucketNames:
          chunks: chunks
          ruler: ruler
          admin: admin  
>>>>>>> 3655c36ae21c4c9e614fce41650948bca89472ae
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
<<<<<<< HEAD
      storage_config:
        filesystem:
          directory: /tmp/loki/chunks
=======
      storage_config:
        filesystem:
          directory: /tmp/loki/chunks        
>>>>>>> 3655c36ae21c4c9e614fce41650948bca89472ae
      pattern_ingester:
        enabled: true
      ruler:
        enable_api: true
<<<<<<< HEAD
      #auth_enabled: false
=======
      #auth_enabled: false   
>>>>>>> 3655c36ae21c4c9e614fce41650948bca89472ae
    minio:
      enabled: false
      #persistence:
      #  enabled: true
      #  storageClass: efs-observability         # Nome do seu StorageClass EFS
      #  size: 20Gi                   # Defina o tamanho que quiser para o PVC (apesar do EFS ser "infinito")
      #  accessModes:
      #    - ReadWriteMany            # Requisito do EFS (RWX)
    lokiCanary:
      enabled: false
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 1
      persistence:
        enabled: true
<<<<<<< HEAD
        storageClass: hostpath
        size: 30Gi
        accessModes:
          - ReadWriteOnce
        mountPath: /observability
      resources:
        requests:
          cpu: "1"
          memory: "2Gi"
        limits:
          cpu: "2"
          memory: "4Gi"
    sidecar:
      image:
        repository: kiwigrid/k8s-sidecar
        tag: 1.30.0
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
        limits:
          cpu: 100m
          memory: 100Mi
=======
        storageClass: hostpath
        size: 30Gi
        accessModes:
          - ReadWriteOnce
        mountPath: /observability  
      resources:
        requests:
          cpu: "1"
          memory: "2Gi"
        limits:
          cpu: "2"
          memory: "4Gi"
    sidecar:
      image:
        repository: kiwigrid/k8s-sidecar
        tag: 1.30.0
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
        limits:
          cpu: 100m
          memory: 100Mi                           
>>>>>>> 3655c36ae21c4c9e614fce41650948bca89472ae
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0
<<<<<<< HEAD
    chunksCache:
      allocatedMemory: 1024
=======
    chunksCache:
      allocatedMemory: 1024  
>>>>>>> 3655c36ae21c4c9e614fce41650948bca89472ae